* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --dark: #0e100f;
  --mediumDark: #3b438f;
  --normal: #a056fa;
  --mediumLight: #8de6e9;
  --light: #fefce1;
  --displayFont: "Archivo", sans-serif;
  --copyFont: "Montserrat", sans-serif;
}

body {
  /* background-color: var(--dark); */
  background-image: url(./IMGs/confetti.jpg);
  background-size: 200vw auto;
  background-position-y: 0px;
  background-repeat: repeat-y;
  font-family: var(--copyFont);
  color: var(--light);
  --topBarHeight: 100px;
  overflow: hidden;
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Old versions of Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */
}

button {
  position: relative;
  transition: transform 0.3s ease-in-out;
}

button:active {
  transform: scale(1.1);
}

.backgroundImg {
  width: 100%;
  height: 100%;
}

.blurBg {
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 10;
  top: 0;
  left: 0;
  display: none;
  backdrop-filter: blur(7px);
  justify-content: center;
  align-items: center;
}

.displayFlex {
  display: flex !important;
}

/* Styles that specifically apply to Safari */
@supports (-webkit-backdrop-filter: blur(7px)) {
  /* Background color specific to Safari */
  .blurBg,
  .topBar {
    background-color: rgba(0, 0, 0, 0.6);
  }
}

.topBar {
  width: 100%;
  height: var(--topBarHeight);
  padding: 1em;
  border-bottom: 1px solid var(--mediumDark);
  backdrop-filter: blur(7px);
  position: absolute;
  z-index: 5;
  display: flex;
  flex-direction: column;
  row-gap: 15px;
  justify-content: center;
  align-items: center;
  font-family: var(--displayFont);
  font-weight: 600;
  overflow: hidden;
}

.keyWrapper {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 3fr 2px;
  column-gap: 0.3em;
  font-size: 60px;
}

.keyWrapper > div:nth-child(odd) {
  margin: 5px 0;
}

.topBar span {
  display: block;
}

.keyWrapper .numUnderline {
  background-color: var(--mediumDark);
  grid-row: 2 / 3;
}

.keyEntryMsg {
  font-family: var(--copyFont) !important;
  font-size: 22px;
  line-height: 29px;
  padding: 0 1em;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.keyEntryDiv {
  display: flex;
  flex-direction: column;
  row-gap: 15px;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  height: 0;
  opacity: 0;
}

.nextQ {
  background-color: transparent;
  color: var(--normal);
  border: 2px solid var(--normal);
  padding: 1em;
  border-radius: 15px;
  font-size: 16px;
  font-family: var(--copyFont);
  margin: 0 0 7px 0;
  position: relative;
  animation: nextQboop 1.3s ease-in-out infinite;
}

@keyframes nextQboop {
  0% {
    top: 0;
  }
  50% {
    top: 7px;
  }
  100% {
    top: 0;
  }
}

.topBarPlaceholder {
  height: var(--topBarHeight);
}

.numBgFlash {
  animation: bgFlash 2s infinite;
}

@keyframes bgFlash {
  0% {
    background-color: transparent;
  }
  50% {
    background-color: var(--mediumDark);
  }
  100% {
    background-color: transparent;
  }
}

.wrapper {
  width: 100%;
  height: calc(100vh - var(--topBarHeight));
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  row-gap: 1em;
  overflow: hidden;
  font-family: var(--copyFont) !important;
}

.title {
  font-family: var(--displayFont);
  font-weight: 900;
  padding: 0.2em;
  width: 100%;
  text-align: center;
  font-size: 70px;
  color: var(--normal);
}

.proceed {
  background-color: var(--mediumDark);
  color: var(--light);
  font-family: var(--displayFont);
  font-size: 1.3rem;
  padding: 1em;
  border: none;
  border-radius: 0.9em;
  animation: proceedScale 3s infinite;
  position: relative;
}

@keyframes proceedScale {
  0% {
    transform: scale(1);
    background-color: var(--mediumDark);
  }
  50% {
    transform: scale(1.1);
    background-color: var(--normal);
  }
  100% {
    transform: scale(1);
    background-color: var(--mediumDark);
  }
}

.questionWrapper {
  padding: 1.3em;
  display: flex;
  flex-direction: column;
  row-gap: 1.5em;
  overflow: hidden;
  display: none;
  opacity: 0;
}

.question {
  font-family: var(--displayFont);
  font-weight: 600;
  font-size: clamp(2rem, 40px, 15px);
}

.optionWrapper {
  display: flex;
  flex-direction: column;
  row-gap: 0.7em;
}

.optionWrapper > div {
  padding: 0.7em;
  border: 1px solid var(--mediumDark);
  border-radius: 10px;
  font-size: 14px;
}

.blurBgMsgWrapper {
  background-color: var(--mediumDark);
  width: 90%;
  max-width: 460px;
  height: auto;
  min-height: 160px;
  transition: height 1s ease-in-out;
  opacity: 0;
  border-radius: 15px;
  display: none;
  position: absolute;
  z-index: 15;
  row-gap: 0.5em;
  overflow: hidden;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.blurBgMsgWrapper > div {
  padding: 0.5em;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.blurBgMsgWrapper h2 {
  font-family: var(--copyFont);
  font-weight: 900;
  font-size: 30px;
}

.blurBgMsgWrapper span {
  font-size: 20px;
  display: block;
  height: auto;
  transition: height 0.5s ease-in-out;
  padding: 0 0.5em;
  text-align: center;
}

.getHint {
  background-color: transparent;
  border: 2px solid var(--light);
  color: var(--light);
  padding: 0.6em;
  border-radius: 10px;
  font-size: 18px;
  margin: 12px 0;
  display: none;
  position: relative;
  animation: getHintScale 1.3s ease-in-out infinite;
}

@keyframes getHintScale {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

/* CONFETTI!!!!  */

.confetti {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: #3b438f; /* Confetti color */
  animation: fall linear forwards; /* Animation for initial position only */
  z-index: 20;
}

@keyframes fall {
  0% {
    transform: translateY(-200vh) rotate(0deg); /* Set initial vertical position */
  }
  100% {
    transform: translateY(100vh) rotate(360deg);
  }
}